# name: CI to Docker Hub

# on:
#   push:
#     branches:
#       - dev

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:

#       - name: Check Out Repo
#         uses: actions/checkout@v2

#       - name: Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v2
#         with:
#           context: ./
#           file: ./Dockerfile
#           builder: ${{ steps.buildx.outputs.name }}
#           build-args: |
#             REACT_APP_API_URL=${{ secrets.API_URL }}
#             SENTRY_DSN=${{ secrets.SENTRY_DSN }}
#           push: true
#           tags: mupts/garage_frontend:latest
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache

#       - name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy package to server
#         uses: appleboy/ssh-action@master
#         env:
#           DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
#           DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#           REACT_APP_API_URL: ${{ secrets.API_URL }}
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           port: ${{ secrets.SSH_PORT }}
#           username: ${{ secrets.SSH_USERNAME }}
#           key: ${{ secrets.SSH_KEY }}
#           envs: REACT_APP_API_URL
#           script: |
#             docker stop $(docker ps -q --filter ancestor=mupts/garage_frontend)
#             docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_ACCESS_TOKEN
#             docker pull mupts/garage_frontend:latest
#             docker run -e BACKEND=$REACT_APP_API_URL --restart unless-stopped -d -p 5003:80 mupts/garage_frontend:latest
